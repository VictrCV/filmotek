name: Build
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  build:
    name: PHPUnit Tests & SonarCloud Scan
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: symfony
          MYSQL_DATABASE: symfony
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php-versions: [ '7.4', '8.0', '8.1' ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql
          coverage: xdebug

      - name: Install dependencies with composer
        run: composer update --no-ansi --no-interaction --no-progress

      - name: Run Migration
        run: |
          composer require --dev symfony/orm-pack
          php bin/console doctrine:schema:update --force || echo "No migrations found or schema update failed"
          php bin/console doctrine:migrations:migrate || echo "No migrations found or migration failed"
        env:
          DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

      - name: Run tests with phpunit/phpunit
        run: vendor/bin/phpunit --coverage-clover=coverage.xml -dxdebug.mode=coverage

      - name: Fix code coverage paths
        run: sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}